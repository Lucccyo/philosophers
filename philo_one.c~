#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int number_of_philosophers;
double time_to_die;
double time_to_eat;
double time_to_sleep;
int number_of_time_each_philosopher_must_eat;
int opt = 0;
pthread_mutex_t forks[];
pthread_mutex_t m_tab;
int tab[];

void *philo(void *i){
    long p_num = ((long) i) % number_of_philosophers;
    printf("%ld >> Hello!\n", p_num);
    fflush(stdout);
    return NULL;
}

int main(int argc, char *argv[]) {
    if(argc < 4) {
	return 1;
    }
    number_of_philosophers = atoi(argv[1]);
    time_to_die = atof(argv[2]);
    time_to_eat = atof(argv[3]);
    time_to_sleep = atof(argv[4]);
    if(argc > 5) {
	opt = 1;
	number_of_time_each_philosopher_must_eat = atoi(argv[5]);
    }
    
    pthread_t tid[number_of_philosophers];
    forks[number_of_philosophers];
    tab[number_of_philosophers] = {0};
    
    for(int i = 0 ; i < number_of_philosophers ; i++){
	pthread_mutex_init(&forks[i] , NULL);
    }
    
    for(int i = 0 ; i < number_of_philosophers ; i++){
	if(pthread_create(&tid[i], NULL, philo, (void *) i) != 0) exit(1);
	pthread_detach(tid[i]);
    }
    
    printf("cat\n");
    return 0;
}
